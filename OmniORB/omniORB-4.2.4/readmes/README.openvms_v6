omniORB on OpenVMS 6.x platforms
================================

omniORB version 3.0 has not been tested for any version of OpenVMS prior to
version 7.1.  While some effort has been made to eliminate "gratuitous"
incompatabilities with older versions of VMS, some incompatibilities
remain.

As of this writing, Python for OpenVMS does not support the "popen" unless the
platform is 7.x.  This is because the DEC C RTL does not support it.  This call
is used in some places.  Therefore, it will be necessary to either implement the
popen call in python or the python code will need to be modified to work around
this deficiency (search [src...]*.py popen).

The current mechanism for building shareable images requires VMS version 7.x.
If you require shareable images, you will need to make changes in this area.

Using tcpSocketVaxRoutines.cc on OpenVMS 6.x
--------------------------------------------

This requires the use of the DEC CRTL backport library (see
sys$library:decc$crtl.readme) for OpenVMS versions older than 7.1. The backport
library is incompatible with the DEC C++ class library and with VAXCRTL so this
is going to be painful.  Numerous multiply defined external references will
occur at link time.  In addition, if you need to link against code compiled
under the VAX C compiler you will need to add statements like:

PSECT_ATTR=ENVIRON,LCL
PSECT_ATTR=STDERR,LCL
PSECT_ATTR=STDIN,LCL
PSECT_ATTR=STDOUT,LCL
PSECT_ATTR=_CTYPE_,LCL
PSECT_ATTR=RANDX,LCL
PSECT_ATTR=ERRNO,LCL
PSECT_ATTR=VAXC$ERRNO,LCL

to a linker options file in order to create an executable.  It should be safe to
ignore the multiply defined symbols that conflict with DECC$CRTL.OLB, but any
other errors or warnings should be heeded.
